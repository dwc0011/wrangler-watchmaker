language: shell
dist: bionic
os: linux

env:
  global:
    - REPO="${TRAVIS_REPO_SLUG#*/}"
    - OWNER=plus3it
    - DEPLOY_SLUG=$OWNER/$REPO
    - TF_INPUT=0

stages:
  - test
  - deploy
  - tag

jobs:
  include:
    - stage: test
      name: Lint all the things
      install:
        - make init
      script:
        - make docker/run target=lint
    - stage: test
      name: Ensure python deps install
      language: python
      python: "3.6"
      install:
        - pip install pipenv
        - pipenv install
      script: skip
    - stage: tag
      if: type != pull_request AND branch = master AND tag is not present
      name: Create GitHub Release
      before_script:
        - PRIOR_VERSION=$(git describe --abbrev=0 --tags)
        - RELEASE_VERSION=$(grep '^current_version' $TRAVIS_BUILD_DIR/.bumpversion.cfg | sed 's/^.*= //')
        - RELEASE_BODY="[$REPO v$RELEASE_VERSION changes](https://github.com/$OWNER/$REPO/compare/$PRIOR_VERSION...$RELEASE_VERSION)"
        - export PRIOR_VERSION RELEASE_VERSION RELEASE_BODY
      script: skip
      before_deploy:
        - echo PRIOR_VERSION = $PRIOR_VERSION
        - echo RELEASE_VERSION = $RELEASE_VERSION
        - echo RELEASE_BODY = $RELEASE_BODY
      deploy:
        provider: releases
        name: $RELEASE_VERSION
        tag_name: $RELEASE_VERSION
        target_commitish: $TRAVIS_COMMIT
        release_notes: $RELEASE_BODY
        draft: false
        token:
          secure: DSNCRy5c3UMD3r0vLoYW95ReHeqEb31u9g9RNI/HKYQxHwAeExIcewAV46OpXsRpVKnsxRwGiF67Wy6fdB/W9OAMsOkI2HNkSXJRTAuv2VVhK+cdBHWlG2hVl5JdIMjVxUQlTCE+R+8pltQJ+MGvBQrim867yiOGX6JpNU8bAVjLSb/Byem+SCqWmGRVbXyRsVDoxcFwVqPaIjn5zJTmyPYPghp7dfRShLTnYczajUkiBvfa/YNFQ8mzfhgwu6++gu+76YPfvIBRBm/fTsqMZitVMuGD6lLwH+BpIJkmitO+JXrlt3uD9X+XF0RZ2smTE2S8glRsxlF6fWDoigDUb9rcsSyGI5cq0CC354Z06KzLaL+Qqr6V9N13Q9CVJWm11tZKWO2gGj7kshWq+leoiadxAhi4eeYnWFaO4hIbuYK9tAntmC3f3Gn0QILzjmwi0YLaYrr5v+XDM+R8ucX6eOT9GmgLX3zfaWZHC3OUe6FGyrOxdTiJ9t/GqzGqGC7saJun4WYD/DFLk5OjiWdYzHg5+djHRiIT8eZhceRkdmCuUjqWACvGdFo8EHIo64kHFlyGIoS3d85JFrB0m1DEwZUA+rdv8eS+46d7X39/NieB+WcSD2BGTfkDDOYoe6UsiC75plIT3M6aoZuKDgBtsMTfwV93lsP+IAcartzCj7w=
        on:
          branch: master
          repo: $DEPLOY_SLUG
          condition: '"$PRIOR_VERSION" != "$RELEASE_VERSION"'
    - stage: deploy
      if: type != pull_request AND (branch = master OR tag is present)
      name: Deploy to target environment (master branch=dev; tag=release)
      language: python
      python: "3.6"
      env:
        - TF_CLI_ARGS_apply="-auto-approve"
      install:
        - pip install pipenv
        - pipenv install
        - make init
        - make rclone/install terraform/install terragrunt/install
      script: skip
      before_deploy:
        - echo TAG = $TRAVIS_TAG
        - echo BRANCH = $TRAVIS_BRANCH
        - pip install travis-wait-improved
      deploy:
        - provider: script
          script: >-
            TF_VAR_bucket_name="$DEV_BUCKET"
            TF_VAR_repo_endpoint="$DEV_REPO"
            travis-wait-improved --timeout 45m
            make deploy/dev
          on:
            branch: master
            repo: $DEPLOY_SLUG
          cleanup: false
        - provider: script
          script: >-
            TF_VAR_bucket_name="$RELEASE_BUCKET"
            TF_VAR_repo_endpoint="$RELEASE_REPO"
            travis-wait-improved --timeout 120m
            make deploy/release
          on:
            tags: true
            repo: $DEPLOY_SLUG
          cleanup: false
